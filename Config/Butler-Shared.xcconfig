//
// Butler-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 6/15/17
// https://github.com/dempseyatgithub/BuildSettingExtractor
//


// Enable Testability
// 
// When this setting is activated, the product will be built with options appropriate for
// running automated tests, such as making private interfaces accessible to the tests.
// This may result in tests running slower than they would without testability enabled.

ENABLE_TESTABILITY = YES



// Framework Search Paths
// 
// This is a list of paths to folders containing frameworks to be searched by the
// compiler for both included or imported header files when compiling C, Objective-C,
// C++, or Objective-C++, and by the linker for frameworks used by the product. Paths are
// delimited by whitespace, so any paths with spaces in them need to be properly quoted.

FRAMEWORK_SEARCH_PATHS = $(inherited) $(PLATFORM_DIR)/Developer/Library/Frameworks



// Header Search Paths
// 
// This is a list of paths to folders to be searched by the compiler for included or
// imported header files when compiling C, Objective-C, C++, or Objective-C++. Paths are
// delimited by whitespace, so any paths with spaces in them need to be properly quoted.

HEADER_SEARCH_PATHS = $(inherited)



// Info.plist File
// 
// The project-relative path to the plist file that contains the `Info.plist` information
// used by bundles. For details on information property list files, see “[Information
// Property List Files](//apple_ref/doc/uid/20002091&kind=article)” in [Runtime
// Configuration Guidelines](//apple_ref/doc/uid/10000170i).

INFOPLIST_FILE = Butler.xcodeproj/Butler_Info.plist



// Runpath Search Paths
// 
// This is a list of paths to be added to the runpath search path list for the image
// being created.  At runtime, dyld uses the runpath when searching for dylibs whose load
// path begins with '@rpath/'. See [Dynamic Library Programming
// Topics](//apple_ref/doc/uid/TP40001869).

LD_RUNPATH_SEARCH_PATHS = $(TOOLCHAIN_DIR)/usr/lib/swift/macosx



// Other Linker Flags
// 
// Options defined in this setting are passed to invocations of the linker.

OTHER_LDFLAGS = $(inherited)



OTHER_SWIFT_FLAGS = $(inherited)



// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (A-Z, a-z, 0-9), the dot (“.”), and the
// hyphen (“-”). This value is used as the CFBundleIdentifier in the Info.plist of the
// built bundle.

PRODUCT_BUNDLE_IDENTIFIER = Butler



// Product Module Name
// 
// The name to use for the source code module constructed for this target, and which will
// be used to import the module in implementation source files.  Must be a valid
// identifier.

PRODUCT_MODULE_NAME = $(TARGET_NAME:c99extidentifier)



// Product Name
// 
// This is the basename of the product generated by the target.

PRODUCT_NAME = $(TARGET_NAME:c99extidentifier)



// Skip Install
// 
// If enabled, don't install built products even if deployment locations are active.

SKIP_INSTALL = YES



// Target Name
// 
// The name of the current target.

TARGET_NAME = Butler